---
title: "T-ALL Bulk RNA-seq STAR Quantification"
author: "Jenny L. Smith"
jupyter: python3
execute: 
  enabled: true
  cache: true
  freeze: auto
format:
  html:
    quarto-required: ">=1.6.40"
    theme: cyborg
    toc: true
    toc-depth: 3
    toc-location: left-body
    code-fold: false
    code-overflow: wrap
    code-line-numbers: false
    code-link: true
    code-copy: true
    anchor-sections: true
    fontsize: 1.1em
    linestretch: 1.5
    smooth-scroll: true
    email-obfuscation: javascript
---

# Set-up 

```{python}
# Core plotting libraries
import numpy as np
import matplotlib.pyplot as plt

# Session information
import session_info
```

```{r}
library(dplyr)
library(stringr)
library(purrr)
library(tidyr)
```

# Background

please see attached list of the samples we sequenced with the following info:
  - [...]


### Collaborators

- [NAME 1]
- [NAME 2]
- [...]

- Department of Pediatric Hematology-Oncology, and Cell and Gene Therapies

- Bambino Ges√π Children's Hospital

# Install Dependencies

Use the lab quarto template 
```{bash}
quarto use template Meshinchi-Lab/py_analysis_template
python3 -m venv venv 
source venv/bin/activate 
python3 -m pip install -r requirements.txt
```

Install nextflow and NF-Core tools CLI 
```{bash}
python3 -m pip install nextflow
python3 -m pip install nf-core
```

# Download Reference Data

```{bash}
# URL='https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_48/GRCh38.primary_assembly.genome.fa.gz'

REFS="/genome_references/human/gencode_v48/"
sudo mkdir -p $REFS

rclone lsd --http-url https://ftp.ebi.ac.uk :http:/pub/databases/gencode/Gencode_human/release_48

cd $REFS
sudo rclone copy --http-url https://ftp.ebi.ac.uk :http:/pub/databases/gencode/Gencode_human/release_48/GRCh38.primary_assembly.genome.fa.gz . -P
```

# Download Test Datasets

Human data from the NF-Core github repo 

```{bash}
# https://github.com/nf-core/test-datasets/tree/rnafusion/testdata/human

sudo wget -v https://raw.githubusercontent.com/nf-core/test-datasets/refs/heads/rnafusion/testdata/human/README.md

sudo wget -v https://github.com/nf-core/test-datasets/raw/refs/heads/rnafusion/testdata/human/reads_1.fq.gz

sudo wget -v https://github.com/nf-core/test-datasets/raw/refs/heads/rnafusion/testdata/human/reads_2.fq.gz
```

# Run Test Data

### Set-up environment 

```{bash}
# colima
cd ~/opt
curl -LO https://github.com/abiosoft/colima/releases/latest/download/colima-$(uname)-$(uname -m)
sudo install colima-$(uname)-$(uname -m) /usr/local/bin/colima

# lima
cd ~/opt
wget https://github.com/lima-vm/lima/releases/download/v1.1.1/lima-1.1.1-Linux-x86_64.tar.gz
tar -xvzf lima-1.1.1-Linux-x86_64.tar.gz

# qemu 1
sudo apt-get install qemu-system

# configure the docker engine
sudo dpkg --log=containerd.log --debug=10 -i containerd.io_1.7.27-1_amd64.deb
sudo dpkg --log=docker-ce-cli.log --debug=10 -i docker-ce-cli_28.3.1-1~ubuntu.22.04~jammy_amd64.deb
sudo dpkg --log=docker-ce-cli.log --debug=10 -i docker-ce_28.3.1-1~ubuntu.22.04~jammy_amd64.deb
```

Configure the `docker` user group

```{bash}
#https://docs.docker.com/engine/install/linux-postinstall/
sudo groupadd docker
sudo usermod -aG docker $USER
newgrp docker
docker run hello-world
```

```{bash}
# activate venv
source venv/bin/activate
./main_run test_pe_dataset
```

getent group docker
id -u
id -g
id -G


# Run T-ALL Samples 

SOURCE="$HOME/mnt/opbg/ngsonco/NGS/Francesca Benini/T-ALL/WTS run 2025.05.12/WTS_1-51-38360350"
TARGET="$HOME/github_repos/2025.06.02_RNAseq_Bulk_T-ALL/data/fastq/WTS_run_2025.05.12"
OUTDIR="$HOME/github_repos/2025.06.02_RNAseq_Bulk_T-ALL/data/rnaseq_quant"

```{bash}
SOURCE="$HOME/mnt/opbg/ngsonco/NGS/Francesca Benini/T-ALL/WTS run 2025.05.12/WTS_1-51-38360350"
TARGET="$HOME/github_repos/2025.06.02_RNAseq_Bulk_T-ALL/data/fastq/WTS_run_2025.05.12"

# symlink the fastqs from the 
ln -s "$SOURCE" $TARGET

```

```{bash}
OUTDIR="$HOME/github_repos/2025.06.02_RNAseq_Bulk_T-ALL/data/rnaseq_quant"
mkdir $OUTDIR
```

# Sample Metadata

```{r}
sample_info <- read.table(file.path(Sys.getenv("HOME"),"github_repos/2025.06.02_RNAseq_Bulk_T-ALL/data/metadata/2025.06.03_T-ALL_samples_forJenny_rnaseq_libraries_cleaned.tsv"),
                          sep = "\t",
                          header = TRUE)


head(sample_info)
```

```{r}
DESCRIPTION_HEADER <- c("column r1 : the absolute or relative filepath for the read 1 fastq in paired-end RNA-seq, or the single-end fastq file.
column r2 : the absolute or relative filepath for the read 2 fastq in paired-end RNA-seq.
column id : unique sample ID, no duplicates allowed in the sample sheet.
column single_end : boolean [true/false] if the data is single-end or paired-end.")
```

```{r}
cat(DESCRIPTION_HEADER, file = "data/sample_sheets/2025.06.03_T-ALL_bulk_rnaseq_sample_sheet.csv", sep = "\n")
```

```{r}
# fqs_dir <- dir(file.path(Sys.getenv("HOME"), "github_repos/2025.06.02_RNAseq_Bulk_T-ALL/data/fastq/WTS_run_2025.05.12"), 
#                recursive = TRUE,
#                full.names = TRUE,
#                pattern = "*.fastq.gz")

fqs_dir <- read.delim("fastq_filepaths.txt", header=FALSE)
fqs_dir <- fqs_dir[["V1"]]
head(fqs_dir)
```

```{r}
# define outdir
OUTDIR <- file.path(Sys.getenv("HOME"), "github_repos/2025.06.02_RNAseq_Bulk_T-ALL/data/fastq/concatenated")
dir.create(OUTDIR, recursive = TRUE)

# concatenate Lane 1 and Lane 2 for all samples
fqs_concat<- map_dfr(.x = fqs_dir, .f = ~ t(str_split_1(.x, pattern = "/")) %>% 
    as.data.frame()) %>% 
    select(-V1) 

fqs_concat <- fqs_concat %>% 
    rename_all(.funs = ~ unlist(fqs_concat[1,]))  %>% 
    mutate(fastq_path = fqs_dir) %>% 
    select(-c(home:github_repos, data),
            project = `2025.06.02_RNAseq_Bulk_T-ALL`,
            type = fastq,
            run_name = WTS_run_2025.05.12,
            fastq_generation = `FASTQ_Generation_2025-05-15_14_48_36Z-60284247`,
            lane = `47_L002-ds.f8598a51d9c442ffb20db6d63e4e182d`,
            fastq_file = `6728_S47_L002_R1_001.fastq.gz`,
            fastq_path) %>% 
    mutate(sample_number = str_split_fixed(lane, pattern = "_", n = 2)[,1],
           lane = str_split_fixed(lane, pattern = "[_-]", n = 3)[,2], 
           sample_name = str_split_fixed(fastq_file, pattern = "_", n = 2)[,1],
           read = str_split_fixed(fastq_file, pattern = "_", n = 5)[,4],
           sample_id = gsub("^(.+)_L.+001.+$", "\\1", fastq_file)
           ) %>% 
    select(sample_id, 
           sample_name, 
           lane, 
           read, 
           fastq_file, 
           everything()) %>% 
    arrange(desc(sample_id), read, lane) %>% 
    group_by(sample_id, sample_name, read) %>%
    mutate(cat_command = glue::glue("zcat {paste(fastq_path, collapse = ' ')} > {OUTDIR}/{sample_id}_{read}_001.fastq") %>%
               unique() %>% 
               c(.,"")) %>%
    ungroup()

head(fqs_concat)
```

```{r}
cmds <- fqs_concat[["cat_command"]]
```

```{r}
sample_sheet <- as_tibble(x = fqs_dir) %>% 
    select(fq_path = value) %>% 
    mutate()

head(sample_sheet)
```


# Quality Control 


# Unsupervised Clustering


# Perform Differential Expression


# QC Plots 


# Session Information

```{python}
session_info.show()
```
