//global params
workDir = "/Users/jsmi26/Downloads/temp/" 
params {
    // general options
    //validate_params           = true // will add in the sample sheet validation
    outdir                      = "./results/"
    publish_dir_mode            = 'copy'
    enable_conda                = false

    //global params
    sample_sheet                = "test_data/sample_sheet.txt"

    //star specific params
    //Must be full filepaths for files outside the projectDir
    index                       = "/Users/jsmi26/Downloads/refs/STAR/human_v38/STAR_2.7"
    gtf                         = "/Users/jsmi26/Downloads/refs/STAR/human_v38/STAR_2.7/genes.gtf"
    star_ignore_sjdbgtf         = false
    seq_platform                = ''
    seq_center                  = ''
}

// Run the analysis locally with minimal compute resources
process {
    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]
    errorStrategy = "retry"
    maxRetries = 1

    //FastQC process specific parameters
    withName: FASTQC {
        executor = 'local'
        cpus = 1
        memory = 4.GB
        ext.args = '--quiet'
    }

    //STAR-aligner process specific parameters
    withName: STAR_ALIGN {
        executor = 'local'
        cpus = 5
        memory = 32.GB
        ext.args = '--readFilesCommand "gunzip -c" --outSAMattributes NH HI NM MD AS nM jM jI XS --quantMode GeneCounts'
    }
}

//Use docker engine for now
docker {
    enabled = true
    temp = 'auto'
    runOptions = "--platform linux/amd64 --memory=32g --cpus=0.000"
}
