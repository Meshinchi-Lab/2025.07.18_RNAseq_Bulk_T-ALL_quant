//working directory for temporary/intermediate files produced in the workflow processes
workDir = "/home/jsmi26/temp" 

//global parameters
params {
    // general options
    sample_sheet                = "sample_sheets/kappe_s_PfHsMmu_sample_sheet.txt"
    //validate_params           = true // will add in the sample sheet validation
    queue                       = 'sceaq'
    project                     = '9164fb2f-42f9-4075-a1f9-e5e52f22fcfc'
    outdir                      = "./results/"
    publish_dir_mode            = 'copy'
    enable_conda                = false //can  set logic here for if profile=="PBS_conda" set this to true?

    //star specific params
    //Must be full filepaths for files outside the projectDir
    index                       = '/active/taylor_s/people/jsmi26/RPDEV/rnaseq_count_nf/resources/STAR_2.7.9a'
    gtf                         = '/active/taylor_s/people/jsmi26/RSC/kappe_s_2022.04_PF_LiverStage/species_genomes/PfHsMmu_grc.gff'
    fasta                       = '/active/taylor_s/people/jsmi26/RSC/kappe_s_2022.04_PF_LiverStage/species_genomes/PfHsMmu_genomicDNA.fasta'
    star_ignore_sjdbgtf         = false
    seq_platform                = ''
    seq_center                  = ''
}

// Computational resource allocation for the processes run in the workflow
process {
    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]
    errorStrategy = "retry"
    maxRetries = 2

    //FastQC process specific parameters
    withName: FASTQC {
        cpus = 1
        memory = 8.GB
        ext.args = '--quiet'
    }

    //MULTIQC process specific parameters
    withName: MULTIQC {
        cpus = 1
        memory = 8.GB
        ext.args = '--module fastqc --module star'
    }

    //STAR-aligner process specific parameters
    //https://www.nextflow.io/docs/latest/process.html#dynamic-computing-resources
    withName: STAR_ALIGN {
        cpus = { 4 * task.attempt }
        memory = { 32.GB * task.attempt }
        ext.args = '--sjdbGTFtagExonParentTranscript Parent --sjdbGTFtagExonParentGene Parent --quantMode GeneCounts --twopassMode Basic --twopass1readsN -1 --outSAMtype BAM SortedByCoordinate --readFilesCommand "gunzip -c" --outSAMattributes NH HI NM MD AS nM jM jI XS'
    }

    //STAR index process specific parameters
    withName: STAR_GENOMEGENERATE {
        cpus = { 8 * task.attempt }
        memory = { 64.GB * task.attemp }
        ext.args = '--sjdbGTFtagExonParentTranscript Parent'
    }
}

//Create profiles to easily switch between the different process executors and platforms.
profiles {
    //For running on an interactive session on cybertron with singularity module loaded
    local_singularity {
        process.executor = 'local'
        singularity.enabled = true
    }
    //For executing the jobs on the HPC cluster with singularity containers
    PBS_singularity {
        process.executor = 'pbspro' 
        process.queue = "${params.queue}"
        process.clusterOptions = "-P ${params.project}"
        //process.clusterOptions = "-P \$(voucher project ${params.project})" //renders correctly in command.run script but scheduler won't accept it.
        process.beforeScript = 'module load singularity/3.9.9'
        singularity.enabled = true //need some logic here to switch to false if conda used
    }
    //For executing the jobs on the HPC cluster with conda environments. 
    PBS_conda {
        process.executor = 'pbspro' 
        process.queue = "${params.queue}"
        process.clusterOptions = "-P ${params.project}"
        //can I set the enable_conda = true params here somehow??
    }
    //For running interactively on local macbook with docker installed. 
    local_docker {
        process.executor = 'local'
        docker.enabled = true
    }
}

//Configs for singularity containers on cybertron
singularity {
    autoMounts = true
    cacheDir = '/home/jsmi26/singularity'
    runOptions = '--containall --no-home'
}

//Use personal conda environments on cybertron if conda_enabled = true
conda {
    cacheDir = "/home/jsmi26/miniconda3/envs/"
}

//Configs for docker containers on local macbook with 64Gb memory
docker {
    temp = 'auto'
    runOptions = "--platform linux/amd64 --memory=32g --cpus=0.000"
}

//overwrite reports when the workflow is executed again 
report {
    overwrite = true
}