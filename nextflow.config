//working directory for temporary/intermediate files produced in the processes
workDir = "/home/jsmi26/temp" 

//global parameters
params {
    // general options
    sample_sheet                = "test_data/sample_sheet.txt"
    //validate_params           = true // will add in the sample sheet validation
    queue                       = 'sceaq'
    outdir                      = "./results/"
    publish_dir_mode            = 'copy'
    enable_conda                = false

    //star specific params
    //Must be full filepaths for files outside the projectDir
    index                       = "/gpfs/shared_data/STAR/human_v38/STAR_2.7"
    gtf                         = "/gpfs/shared_data/STAR/human_v38/STAR_2.7/genes.gtf"
    fasta                       = "/gpfs/shared_data/STAR/human_v38/STAR_2.7/genome.fa"
    star_ignore_sjdbgtf         = false
    seq_platform                = ''
    seq_center                  = ''
}

// Computational resource allocation for the processes run in the workflow
process {
    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]
    errorStrategy = "retry"
    maxRetries = 1

    //FastQC process specific parameters
    withName: FASTQC {
        cpus = 1
        memory = 4.GB
        ext.args = '--quiet'
    }

    //STAR-aligner process specific parameters
    withName: STAR_ALIGN {
        cpus = 4
        memory = 32.GB
        ext.args = '--readFilesCommand "gunzip -c" --outSAMattributes NH HI NM MD AS nM jM jI XS --quantMode GeneCounts'
    }

    //STAR index process specific parameters
    withName: STAR_GENOMEGENERATE {
        cpus = 6
        memory = 64.GB
        ext.args = ''
    }
}

//Create profiles to easily switch between the different process executors and platforms.
profiles {
    //For running on an interactive session with singularity module loaded
    cybertron_singularity {
        process.executor = 'local'
        singularity.enabled = true 
    }
    //For executing the jobs on the HPC cluster.
    PBS_singularity {
        process.executor = 'pbspro' 
        process.queue = "${params.queue}"
        singularity.enabled = true //need some logic here to switch to false if conda used
    }
    //For running interactively on local macbook with docker installed. 
    local_docker {
        process.executor = 'local'
        docker.enabled = true
    }

}

//Configs for singularity containers on cybertron
singularity {
    autoMounts = true
    cacheDir = '/home/jsmi26/temp'
    runOptions = '--containall --no-home'
}

//Use personal conda environments on cybertron if conda_enabled = true
conda {
    cacheDir = "/home/jsmi26/miniconda3/envs/"
}

//Configs for docker containers on local macbook
docker {
    temp = 'auto'
    runOptions = "--platform linux/amd64 --memory=32g --cpus=0.000"
}

